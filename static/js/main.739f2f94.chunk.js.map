{"version":3,"sources":["components/Header/header.js","components/Scrawls/scrawltext.js","components/Frame/frame.js","components/WallMenu/wallmenu.js","content.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","location","this","className","x","y","React","Component","rune","split","ScrawlText","inputCapture","e","setState","textValue","target","value","state","contentZone","contentCoords","zone","coords","coef","c","charAt","indexOf","length","content","phase","style","top","left","type","onChange","onClick","saveScrawl","id","zoneEnumerator","dir","str","sign","shift","n","unshift","join","Frame","modeAction","mode","makeScrawl","pullWall","console","log","newScrawl","clientX","clientY","addScrawl","setMode","transit","buttons","movementX","movementY","onMouseMove","bind","map","item","i","key","WallMenu","action","trans","visible","vanish","window","oncontextmenu","visibility","App","scrawl","push","newLoc","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.739f2f94.chunk.js","sourcesContent":["import React from 'react';\nimport \"./header.css\";\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        let { location } = this.props;\n        return (\n            <header className=\"header-base\">\n                <div className=\"locator\">{`@${location.x}, ${location.y}`}</div>\n                <div className=\"user-control\">\n                    <div className=\"user-face\"></div>\n                    <div className=\"user-menu\">\n                        <div className=\"menu-item\">User Name</div>\n                        <div className=\"menu-item\">Item 1</div>\n                        <div className=\"menu-item\">Item 2</div>\n                        <div className=\"menu-item\">Item 3</div>\n                        <div className=\"menu-item\">Item 4</div>\n                    </div>\n                </div>\n            </header>  \n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport './scrawltext.css';\n\nconst rune = \"0123456789abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\nclass ScrawlText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textValue: \"\"\n        }\n    }\n    inputCapture = (e) => {\n        this.setState({ textValue: e.target.value });\n    }\n    render() {\n        const { contentZone, contentCoords } = this.props;\n        const { zone, coords } = this.props.location;\n        const coef = (c) => {\n            let sign = (zone[c].charAt(0) === \"-\" ? -1 : 1);\n            return sign * (rune.indexOf(contentZone[c].charAt(contentZone[c].length - 1)) - rune.indexOf(zone[c].charAt(zone[c].length - 1)));\n        }\n        switch (this.props.content.phase) {\n            case \"new\":\n                return (\n                    <div className=\"scrawl-item\"\n                        style={{\n                            top: (contentCoords.y + coords.y + (1000 * coef(\"y\"))),\n                            left: (contentCoords.x + coords.x + (1000 * coef(\"x\")))\n                        }}\n                    >\n                        <input\n                            type=\"text\"\n                            className=\"scrawl-text-new\"\n                            onChange={this.inputCapture}\n                        />\n                        <input\n                            type=\"submit\"\n                            className=\"scrawl-submit-btn\"\n                            value=\"OK\"\n                            onClick={() => this.props.saveScrawl(this.props.content.id, this.state.textValue)}\n                        />\n                    </div>\n                );\n            case \"set\":\n                return (\n                    <div className=\"scrawl-item\"\n                        style={{\n                            top: (contentCoords.y + coords.y + (1000 * coef(\"y\"))),\n                            left: (contentCoords.x + coords.x + (1000 * coef(\"x\")))\n                        }}\n                    >\n                        {this.props.content.value}\n                    </div>\n                );\n            default:\n                break;\n        }\n    }\n}\n\nexport default ScrawlText;","import React from 'react';\nimport ScrawlText from '../Scrawls/scrawltext';\nimport './frame.css';\n\nconst rune = \"0123456789abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\nconst zoneEnumerator = (value, dir) => {\n    let str = value.split(\"\");\n    let sign = \"\";\n    if (str[0] === \"-\") {\n        str.shift();\n        sign = \"-\";\n        dir = -dir;\n    }\n    if (dir === 1) {\n        for (let n = str.length-1; n >= -1; n--){\n            if (n < 0) {\n                str.unshift(\"1\");\n                break;\n            }else if (str[n] !== \"z\") {\n                str[n] = rune[rune.indexOf(str[n]) + 1];\n                break;\n            } else {\n                str[n] = \"0\";\n            }\n        }\n    } else if (dir === -1) {\n        for (let n = str.length-1; n >= -1; n--){\n            if (n < 0) {\n                str.shift();\n                break;\n            }else if (str[n] !== \"0\") {\n                str[n] = rune[rune.indexOf(str[n]) - 1];\n                if (str.length === 1 && str[n] === \"0\") {\n                    sign = \"\";\n                }\n                break;\n            } else {\n                if (str.length === 1) {\n                    sign = \"-\";\n                    str[0] = \"1\";\n                    break;\n                } else {\n                    str[n] = \"z\";\n                }\n            }\n        }\n    }\n    return sign + str.join(\"\");\n}\n\nclass Frame extends React.Component {\n    constructor(props) {\n        super(props);\n        //\n    }\n    modeAction = (e) => {\n        switch (this.props.mode) {\n            case \"draw\":\n                this.makeScrawl(e);\n                break;\n            case \"explore\":\n                this.pullWall(e);\n                break;\n            default:\n                break;\n        }\n    }\n    makeScrawl = (e) => {\n        if (this.props.mode === \"draw\") {\n            console.log(\"making new scrawl\");\n            const newScrawl = {\n                id: this.props.content.length+1,\n                type: \"text\",\n                phase: \"new\",\n                value: \"\",\n                coords: {\n                    x: e.clientX,\n                    y: e.clientY\n                },\n                zone: {\n                    x: this.props.location.zone.x,\n                    y: this.props.location.zone.y\n                }\n            };\n            console.log(newScrawl);\n            this.props.addScrawl(newScrawl);\n            this.props.setMode(\"explore\");\n        }\n    }\n    pullWall = (e) => {\n        let { location, transit } = this.props;\n        if (e.buttons === 1 && this.props.mode === \"explore\") {\n            location.coords.x += e.movementX;\n            location.coords.y += e.movementY;\n            if (location.coords.x > 1000) {\n                location.coords.x -= 1000;\n                location.zone.x = zoneEnumerator(location.zone.x, -1);\n            } else if (location.coords.x < 0) {\n                location.coords.x += 1000;\n                location.zone.x = zoneEnumerator(location.zone.x, 1);\n            }\n            if (location.coords.y > 1000) {\n                location.coords.y -= 1000;\n                location.zone.y = zoneEnumerator(location.zone.y, -1);\n            } else if (location.coords.y < 0) {\n                location.coords.y += 1000;\n                location.zone.y = zoneEnumerator(location.zone.y, 1);\n            }\n            transit(location.zone, location.coords);\n        }\n    }\n    render() {\n        const { content, location } = this.props;\n        return (\n            <div\n                className=\"wall-frame\"\n                onMouseMove={this.pullWall.bind(this)}\n                onClick={this.makeScrawl.bind(this)}\n            >\n                {\n                    content.map((item, i) => {\n                        switch (content[i].type) {\n                            case \"text\":\n                                return (\n                                    <ScrawlText \n                                        key={content[i].id}\n                                        content={content[i]}\n                                        contentZone={content[i].zone}\n                                        contentCoords={content[i].coords}\n                                        location={location}\n                                        saveScrawl={this.props.saveScrawl}\n                                    />\n                                )\n                            default:\n                                break;\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Frame;","import React from 'react';\nimport \"./wallmenu.css\";\n\nclass WallMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: \"hidden\",\n            top: 0,\n            left: 0\n        };\n        window.oncontextmenu = function (e) {\n            this.setState({\n                visible: \"visible\",\n                top: e.clientY - 20,\n                left: e.clientX - 75\n            });\n            return false;\n        }.bind(this);\n    }\n    action = (trans) => {\n        this.props.setMode(trans);\n        this.setState({ visible: \"hidden\" });\n    }\n    vanish = () => {\n        this.setState({ visible: \"hidden\" });\n    }\n    render() {\n        return (\n            <div className=\"mode-menu-elem\"\n                style={{\n                    visibility: this.state.visible\n                }}\n            >\n                <div className=\"mode-menu\"\n                    style={{\n                        top: this.state.top,\n                        left: this.state.left\n                    }}\n                >\n                    <input\n                        type=\"button\"\n                        value=\"Draw\"\n                        className=\"mode-menu-item\"\n                        onClick={() => this.action(\"draw\")}\n                    />\n                    <input\n                        type=\"button\"\n                        value=\"Explore\"\n                        className=\"mode-menu-item\"\n                        onClick={() => this.action(\"explore\")}\n                    />\n                </div>\n                <div\n                    className=\"mode-menu-backdrop\"\n                    onClick={() => this.vanish()}\n                ></div>\n            </div>\n        );\n    }\n}\n\nexport default WallMenu;","export const content = [\n    {\n        id: 1,\n        type: \"text\",\n        phase: \"set\",\n        value: \"Joshua\",\n        coords: {\n            x: 25,\n            y: 180\n        },\n        zone: {\n            x: \"0\",\n            y: \"0\"\n        }\n    },\n    {\n        id: 2,\n        type: \"text\",\n        phase: \"set\",\n        value: \"Aaron\",\n        coords: {\n            x: 750,\n            y: 521\n        },\n        zone: {\n            x: \"1\",\n            y: \"1\"\n        }\n    },\n    {\n        id: 3,\n        type: \"text\",\n        phase: \"set\",\n        value: \"Guinness\",\n        coords: {\n            x: 805,\n            y: 16\n        },\n        zone: {\n            x: \"0\",\n            y: \"-1\"\n        }\n    },\n    {\n        id: 4,\n        type: \"text\",\n        phase: \"set\",\n        value: \"Cristen\",\n        coords: {\n            x: 57,\n            y: 921\n        },\n        zone: {\n            x: \"1\",\n            y: \"0\"\n        }\n    }\n]","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/header\"\nimport Frame from \"./components/Frame/frame\";\nimport WallMenu from \"./components/WallMenu/wallmenu\";\nimport { content } from './content';\n\nconst startLoc = {\n  x: 500,\n  y: 500,\n  a: 0,\n  b: 0\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: content,\n      location: {\n        zone: {\n          x: \"0\",\n          y: \"0\"\n        },\n        coords: {\n          x: 0,\n          y: 0\n        }\n      },\n      mode: \"explore\"\n    };\n  }\n  addScrawl = (scrawl) => {\n    content.push(scrawl);\n    this.setState({ content: content })\n    console.log(this.state.content);\n  }\n  saveScrawl = (i, value) => {\n    for (let c of content) {\n      if (c.id === i) {\n        c.phase = \"set\";\n        c.value = value;\n        break;\n      }\n    }\n    console.log(\"content\", content);\n    this.setState({ content: content });\n    console.log(\"state content\", this.state.content);\n  }\n  setMode = (mode) => {\n    console.log(mode);\n    this.setState({ mode: mode });\n  }\n  transit(zone, coords) {\n    const newLoc = {\n      zone: zone,\n      coords: coords\n    };\n    this.setState({ location: newLoc });\n  }\n  //\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          location={this.state.location.zone}\n        />\n        <WallMenu\n          setMode={this.setMode}\n        />\n        <Frame\n          content={this.state.content}\n          location={this.state.location}\n          mode={this.state.mode}\n          setMode={this.setMode}\n          addScrawl={this.addScrawl}\n          saveScrawl={this.saveScrawl}\n          transit={this.transit.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}